generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Team {
  id                  Int               @id @unique @default(autoincrement())
  name                String            @unique
  rank                Int?
  confidential        Boolean
  players             TeamPlayer[]
  availability        Json?
  schedulingChannel   String?
  scheduleRequestsOut ScheduleRequest[] @relation("requester")
  scheduleRequestsIn  ScheduleRequest[] @relation("receiver")
}

model Player {
  discordId String      @id @unique
  oculusId  String      @unique
  team      TeamPlayer?

  @@index([discordId, oculusId])
}

model TeamPlayer {
  playerId  String  @id @unique
  player    Player  @relation(fields: [playerId], references: [discordId], onDelete: Cascade, onUpdate: Cascade)
  teamId    Int
  team      Team    @relation(fields: [teamId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  isCaptain Boolean @default(false)
  isCoCap   Boolean @default(false)

  @@index([teamId])
}

model ScheduleRequest {
  id             Int    @id @default(autoincrement())
  requesterId    Int
  receiverId     Int    @map("opponentId")
  requesterTeam  Team   @relation(name: "requester", fields: [requesterId], references: [id])
  receiverTeam   Team   @relation(name: "receiver", fields: [receiverId], references: [id])
  captainMsgId   String @unique
  coCaptainMsgId String @unique

  @@index([requesterId])
  @@index([receiverId])
}
